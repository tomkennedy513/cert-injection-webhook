name: 'Imgpkg Push'
description: 'Create and push imgpkg bundle'

inputs:
  tag:
    description: 'location to write image'
    required: true
  images_dir:
    description: 'location of setup_ca_certs and webhook images'
    required: true
  bundle_output:
    description: 'name of bundle output'
    required: true

runs:
  using: "composite"
  steps:
  - name: Copy config
    shell: bash
    run: |
      mkdir -p imgpkg-bundle
      cp -r config imgpkg-bundle

  - name: Extract version
    shell: bash
    run: |
      [[ $GITHUB_REF =~ ^refs\/heads\/release\/(.*)$ ]] && version=${BASH_REMATCH[1]} || version=$(date +"%Y-%m-%dT%H:%M:%SZ")
      echo "VERSION=${version}" >> $GITHUB_ENV

  - name: Create version yaml
    shell: bash
    run: |
      cat << EOF > imgpkg-bundle/config/version.yml
      ---
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: cert-injection-webhook-version
        namespace: cert-injection-webhook
      data:
        version: ${{ env.VERSION }}
      EOF
      
      cat imgpkg-bundle/version.yml

  - name: Create imagevalues.yaml
    shell: bash
    run: |
      
      setup_ca_certs_image="$(cat ${{inputs.image_dir}}/setup_ca_certs)"
      webhook_image="$(cat ${{inputs.image_dir}}/webhook)"
      cat <<EOF > imgpkg-bundle/config/imagevalues.yml
      #@data/values
      ---
      setup_ca_certs_image: $setup_ca_certs_image
      webhook_image: $webhook_image
      EOF
      
      cat imgpkg-bundle/config/imagevalues.yml

  - name: Generate imgpkg lock
    shell: bash
    run: |
      mkdir -p imgpkg-bundle/.imgpkg
      kbld -f imgpkg -bundle/config --imgpkg-lock-output imgpkg-bundle/.imgpkg/images.yml
      
      cat imgpkg-bundle/.imgpkg/images.yml

  - name: imgpkg push
    shell: bash
    run: |
      imgpkg push -f imgpkg-bundle/ -b "${{inputs.tag}}:${{ env.VERSION }}" --lock-output ${{ inputs.bundle_output }}
      cat ${{ inputs.bundle_output }}

  - name: Upload Bundle lock
    uses: actions/upload-artifact@v3
    with:
      name: ${{ inputs.bundle_output }}
      path: ${{ inputs.bundle_output }}
